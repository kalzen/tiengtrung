import{l as y}from"./LexicalCollaborationContext.prod-cc6pWIMt.js";import{s as _,t as C,v as D,w as m}from"./editor-BMpVNdGD.js";import{r as l,j as K}from"./app-ipanO3bs.js";function x(e){const c=e.transform();return new Set(c?[c]:[])}function T({initialEditor:e,children:c,initialNodes:h,initialTheme:w,skipCollabChecks:k,skipEditableListener:g}){const E=l.useRef(!1),p=l.useContext(_);p==null&&(function(s,...i){const n=new URL("https://lexical.dev/docs/error"),a=new URLSearchParams;a.append("code",s);for(const t of i)a.append("v",t);throw n.search=a.toString(),Error(`Minified Lexical error #${s}; visit ${n.toString()} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)})(9);const[o,{getTheme:M}]=p,b=l.useMemo((()=>{const s=w||M()||void 0,i=C(p,s);s!==void 0&&(e._config.theme=s),e._parentEditor=e._parentEditor||o;const n=e._createEditorArgs,a=n&&n.namespace;if(h){a||(e._config.namespace=o._config.namespace);for(let t of h){let f=null,r=null;if(typeof t!="function"){const u=t;t=u.replace,f=u.with,r=u.withKlass||null}const v=D(e,t.getType());e._nodes.set(t.getType(),{exportDOM:v?v.exportDOM:void 0,klass:t,replace:f,replaceWithKlass:r,sharedNodeState:m(t),transforms:x(t)})}}else if(n&&n.nodes)a||(e._config.namespace=o._config.namespace);else{const t=e._nodes=new Map(o._nodes);a||(e._config.namespace=o._config.namespace);for(const[f,r]of t)e._nodes.set(f,{exportDOM:r.exportDOM,klass:r.klass,replace:r.replace,replaceWithKlass:r.replaceWithKlass,sharedNodeState:m(r.klass),transforms:x(r.klass)})}return[e,i]}),[]),{isCollabActive:L,yjsDocMap:S}=y(),d=k||E.current||S.has(e.getKey());return l.useEffect((()=>{d&&(E.current=!0)}),[d]),l.useEffect((()=>{if(!g){const s=i=>e.setEditable(i);return s(o.isEditable()),o.registerEditableListener(s)}}),[e,o,g]),K.jsx(_.Provider,{value:b,children:!L||d?c:null})}export{T as m};
